<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="EVC v3 Production load Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">Stress DB</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://CHELSQLSCCLS01:58081;DatabaseName=SingleUseCreditCardRepository01_Stress</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">evcv3</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">_evcv3</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">Stress2 DB</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://CHELSQLES08:1433;DatabaseName=SingleUseCreditCardRepository01_FNT04</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">CX15226DAb</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">_evcv3</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="GLOBALS" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="time" elementType="Argument">
            <stringProp name="Argument.name">time</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="guid" elementType="Argument">
            <stringProp name="Argument.name">guid</stringProp>
            <stringProp name="Argument.value">${__UUID()}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">http://cheljvaevc006:57908/evc/service</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db" elementType="Argument">
            <stringProp name="Argument.name">db</stringProp>
            <stringProp name="Argument.value">Stress DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="duration" elementType="Argument">
            <stringProp name="Argument.name">duration</stringProp>
            <stringProp name="Argument.value">3600</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="startDate" elementType="Argument">
            <stringProp name="Argument.name">startDate</stringProp>
            <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 2); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="endDate" elementType="Argument">
            <stringProp name="Argument.name">endDate</stringProp>
            <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 15); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic TElTUEBFeHA6QzJXTDFxOHo=</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="GetCardDetails Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-85497396">
            <stringProp name="50">2</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="53377398">86400</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select Cards for GCD" enabled="true">
            <stringProp name="dataSource">Stress DB</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT distinct TOP 50000 ca.CreditCardID 
FROM CreditCardArchive ca with(NOLOCK)
INNER JOIN dbo.CardBucket cb  with(NOLOCK) on cb.CardBucketID = ca.CardBucketID
INNER JOIN dbo.CardBucketType cbt  with(NOLOCK) on cbt.CardBucketTypeID = cb.CardBucketTypeID
 WHERE cbt.CardTypeID=1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CreditCardIDSelect</stringProp>
            <stringProp name="resultVariable"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetCardDetails" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">${host}</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:com:expedia:evc:webservice:cardapi:v3&quot; xmlns:urn1=&quot;urn:com:expedia:evc:webservice:domain:common:v3&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;urn:GetCardDetailsRQ&gt;
        &lt;urn:MessageInfo&gt;
            &lt;urn1:CreatedTime&gt;${time}&lt;/urn1:CreatedTime&gt;
            &lt;urn1:TransactionGUID&gt;${guid}&lt;/urn1:TransactionGUID&gt;
         &lt;/urn:MessageInfo&gt;
         &lt;urn:CreditCardID&gt;${__V(CreditCardIDSelect_${__Random(1,${CreditCardIDSelect_#})})}&lt;/urn:CreditCardID&gt;
      &lt;/urn:GetCardDetailsRQ&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-348785353">SoapFault</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-1977726726">
              <stringProp name="54">6</stringProp>
              <stringProp name="54">6</stringProp>
              <stringProp name="47899698">28800</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="GetTransactionHistory Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1953411986">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="47899698">28800</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select Cards for GTH" enabled="true">
            <stringProp name="dataSource">Stress DB</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT distinct TOP 100000 ca.CreditCardID 
FROM CreditCardArchive ca with(NOLOCK)
INNER JOIN dbo.CardBucket cb  with(NOLOCK) on cb.CardBucketID = ca.CardBucketID
INNER JOIN dbo.CardBucketType cbt  with(NOLOCK) on cbt.CardBucketTypeID = cb.CardBucketTypeID
 WHERE cbt.CardTypeID=1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CreditCardIDGETTR</stringProp>
            <stringProp name="resultVariable"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="GetTransaction" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">${host}</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:com:expedia:evc:webservice:cardapi:v3&quot; xmlns:urn1=&quot;urn:com:expedia:evc:webservice:domain:common:v3&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;urn:GetTransactionHistoryRQ&gt;
         &lt;urn:MessageInfo&gt;
            &lt;urn1:CreatedTime&gt;${time}&lt;/urn1:CreatedTime&gt;
            &lt;urn1:TransactionGUID&gt;${guid}&lt;/urn1:TransactionGUID&gt;
         &lt;/urn:MessageInfo&gt;
         &lt;urn:CreditCardID&gt;${__V(CreditCardIDGETTR_${__Random(1,${CreditCardIDGETTR_#})})}&lt;/urn:CreditCardID&gt;
         &lt;urn:MaxTransactionsCount&gt;100&lt;/urn:MaxTransactionsCount&gt;
      &lt;/urn:GetTransactionHistoryRQ&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-348785353">SoapFault</stringProp>
              <stringProp name="-809373649">Exception</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-423749446">
              <stringProp name="1475712">0.02</stringProp>
              <stringProp name="1475712">0.02</stringProp>
              <stringProp name="47899698">28800</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="ModifyCard Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1653573145">
            <stringProp name="49">1</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="47899698">28800</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select Cards for Modify" enabled="true">
            <stringProp name="dataSource">Stress DB</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT TOP 30000 CreditCardID
FROM dbo.CreditCardArchive  with(nolock)
WHERE DeactivatedOnDate is NULL and CardBucketID in (79,80,81,82)
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CreditCardIDModify</stringProp>
            <stringProp name="resultVariable"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${CreditCardIDModify_#}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">CounterModify</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="ModifyCard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">${host}</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:com:expedia:evc:webservice:cardapi:v3&quot; xmlns:urn1=&quot;urn:com:expedia:evc:webservice:domain:common:v3&quot;&gt;
    &lt;soapenv:Header/&gt;
    &lt;soapenv:Body&gt;
        &lt;urn:ModifyCardRQ&gt;
            &lt;urn:MessageInfo&gt;
                &lt;urn1:CreatedTime&gt;${time}&lt;/urn1:CreatedTime&gt;
                &lt;urn1:TransactionGUID&gt;${guid}&lt;/urn1:TransactionGUID&gt;
            &lt;/urn:MessageInfo&gt;
            &lt;urn:CreditCardID&gt;${__V(CreditCardIDModify_${CounterModify})}&lt;/urn:CreditCardID&gt;
            &lt;urn:ClientReference&gt;
                &lt;urn1:ReferenceName&gt;BookingItemID&lt;/urn1:ReferenceName&gt;
                &lt;urn1:ReferenceValue&gt;${__Random(1000000,9999999,)}&lt;/urn1:ReferenceValue&gt;
            &lt;/urn:ClientReference&gt;
            &lt;urn:ModificationReason&gt;FinancialAdjustment&lt;/urn:ModificationReason&gt;
            &lt;urn:CardParameters&gt;
                &lt;urn1:RequestAmount&gt;
                    &lt;urn1:CurrencyCode&gt;USD&lt;/urn1:CurrencyCode&gt;
                    &lt;urn1:Amount DecimalPlaceCount=&quot;2&quot;&gt;${__Random(10000,30000,)}&lt;/urn1:Amount&gt;
                &lt;/urn1:RequestAmount&gt;
                &lt;urn1:MerchantCountry&gt;USA&lt;/urn1:MerchantCountry&gt;
                &lt;urn1:StartDate&gt;${startDate}&lt;/urn1:StartDate&gt;
                &lt;urn1:EndDate&gt;${endDate}&lt;/urn1:EndDate&gt;
                &lt;urn1:MerchantID&gt;6632568&lt;/urn1:MerchantID&gt;
                &lt;urn1:MerchantTypeID&gt;1&lt;/urn1:MerchantTypeID&gt;
                &lt;urn1:AdditionalDataList&gt;
                    &lt;urn1:AdditionalData&gt;
                        &lt;urn1:ReferenceName&gt;BookingID&lt;/urn1:ReferenceName&gt;
                        &lt;urn1:ReferenceValue&gt;${__Random(1000000,9999999,)}&lt;/urn1:ReferenceValue&gt;
                    &lt;/urn1:AdditionalData&gt;
                &lt;/urn1:AdditionalDataList&gt;
            &lt;/urn:CardParameters&gt;
        &lt;/urn:ModifyCardRQ&gt;
    &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;
</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-348785353">SoapFault</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="1681556218">
              <stringProp name="47603">0.1</stringProp>
              <stringProp name="47603">0.1</stringProp>
              <stringProp name="47899698">28800</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="IssueCard Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1915420647">
            <stringProp name="50">2</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="47899698">28800</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="IssueCard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">${host}</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;
  &lt;soap:Header/&gt;
  &lt;soap:Body&gt;
    &lt;ns2:IssueCardRQ
      xmlns=&quot;urn:com:expedia:evc:webservice:domain:common:v3&quot; xmlns:ns2=&quot;urn:com:expedia:evc:webservice:cardapi:v3&quot;&gt;
      &lt;ns2:MessageInfo&gt;
        &lt;CreatedTime&gt;${time}&lt;/CreatedTime&gt;
        &lt;TransactionGUID&gt;${guid}&lt;/TransactionGUID&gt;
      &lt;/ns2:MessageInfo&gt;
      &lt;ns2:ClientReference&gt;
        &lt;ReferenceName&gt;BookingItemID&lt;/ReferenceName&gt;
        &lt;ReferenceValue&gt;${__Random(1000000,9999999,)}&lt;/ReferenceValue&gt;
      &lt;/ns2:ClientReference&gt;
      &lt;ns2:CardParameters&gt;
        &lt;RequestAmount&gt;
          &lt;CurrencyCode&gt;USD&lt;/CurrencyCode&gt;
          &lt;Amount DecimalPlaceCount=&quot;2&quot;&gt;${__Random(150,20000)}&lt;/Amount&gt;
        &lt;/RequestAmount&gt;
        &lt;MerchantCountry&gt;USA&lt;/MerchantCountry&gt;
        &lt;StartDate&gt;${startDate}&lt;/StartDate&gt;
        &lt;EndDate&gt;${endDate}&lt;/EndDate&gt;
        &lt;AdditionalDataList&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;BookingSystemCode&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;EVC v3 test BookingSystemCode-${__Random(1000000,9999999)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;BookingID&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;${__Random(1000000,9999999)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;VendorID&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;${__Random(1000000,9999999)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;ReasonCode&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;EVC v3 test ReasonCode-${__Random(1000000,9999999)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;SalesForceID&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;EVC v3 test SalesForceID-${__Random(1000000,9999999)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;CommentString&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;EVC v3 test CommentString-${__Random(1000000,9999999,)}&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
          &lt;AdditionalData&gt;
            &lt;ReferenceName&gt;Some strange test data&lt;/ReferenceName&gt;
            &lt;ReferenceValue&gt;${__Random(1000000,9999999,)}-test_data&lt;/ReferenceValue&gt;
          &lt;/AdditionalData&gt;
        &lt;/AdditionalDataList&gt;
      &lt;/ns2:CardParameters&gt;
    &lt;/ns2:IssueCardRQ&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-348785353">SoapFault</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="-1977877510">
              <stringProp name="50">2</stringProp>
              <stringProp name="50">2</stringProp>
              <stringProp name="47899698">28800</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="DisableCard  Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1162782137">
            <stringProp name="49">1</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="47899698">28800</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Select Cards for Disable" enabled="true">
            <stringProp name="dataSource">Stress DB</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT TOP 11000 CreditCardID
FROM dbo.CreditCardArchive  with(nolock)
WHERE DeactivatedOnDate is NULL and CardBucketID in (83)
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CreditCardIDDisable</stringProp>
            <stringProp name="resultVariable"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${CreditCardIDDisable_#}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">CounterDisable</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="DisableCard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">${host}</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;
  &lt;soap:Header/&gt;
  &lt;soap:Body&gt;
    &lt;ns2:DisableCardRQ
      xmlns=&quot;urn:com:expedia:evc:webservice:domain:common:v3&quot; xmlns:ns2=&quot;urn:com:expedia:evc:webservice:cardapi:v3&quot;&gt;
      &lt;ns2:MessageInfo&gt;
        &lt;CreatedTime&gt;${time}&lt;/CreatedTime&gt;
            &lt;TransactionGUID&gt;${guid}&lt;/TransactionGUID&gt;
      &lt;/ns2:MessageInfo&gt;
      &lt;ns2:CreditCardID&gt;${__V(CreditCardIDDisable_${CounterDisable})}&lt;/ns2:CreditCardID&gt;
    &lt;/ns2:DisableCardRQ&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-348785353">SoapFault</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="1681782394">
              <stringProp name="47609">0.7</stringProp>
              <stringProp name="47609">0.7</stringProp>
              <stringProp name="47899698">28800</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_Summary.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_ResultTree.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_ResponseOverTime.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_TransactionsPerSecond.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesPercentilesGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Percentiles" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_ResponseTimePercentiles.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector Memory" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_Memory.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-380538318">
            <stringProp name="779096493">cheljvaevc006</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="73589">JMX</stringProp>
            <stringProp name="1589278670">url=cheljvaevc006\:57907:memory-usage</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector CPU" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">../../results/${__time(YMD)}/${__time(yyyy-MM-dd_HH-mm-ss)}_CPU.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <collectionProp name="metricConnections">
          <collectionProp name="696915408">
            <stringProp name="779096493">cheljvaevc006</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
